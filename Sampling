module sampling(

	reset,//reset

	pin_18,// data from PC

	clk,// clock

  	data,//array stored datas

  	dataReady,// to tell next module that data ready

);

// I/O

input reset;

input clk;

input pin_18;

reg   btEnable; // enable bit to control time counter

reg   time_counter;// time counter number

reg   clk_l;// same as clk

output   dataReady;

output [7:0] data;

reg [7:0] tempData;//stored data temperarily

reg [2:0] sample_count;//sample counter

assign clk_1 = clk;  

//--------------reset

always @ (posedge clk or posedge reset)
if (reset) begin

	tempData <=0;

	sample_count <=0;
	
	time_counter <=0;
	
	btEnable <=1;

end 


//--------------data is coming
always @(negedge pin_18)// if the negative edge detected
	if(btEnable)begin
		time_counter <= time_counter + 1; //time counter increment
		if(time_counter == 192)begin //if reset or out =192 which is 1.5BT
			tempData[sample_count] <= pin_18;//store data to tempdata register
			sample_count <= sample_count + 1;// sample count plus one after reading every data
			time_counter <= 0; //reset time_counter
			btEnable <=0; //reset time counter enable
		end 

		if(time_counter == 128 && btEnable ==0)begin //if reset or out =128 which is 1BT

			tempData[sample_count] <= pin_18;//store data to tempdata register
	
			sample_count <= sample_count + 1;// sample count plus one after reading every data
			
				if(sample_count == 7)begin
				
					data[0] <= tempData[0];// tranfer to output 
					
					dataReady <= 1;// telling next module that a byte data is ready
					
					btEnable <= 0;// reset enable bit
				
				end
		end 

	end
endmodule 
